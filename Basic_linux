-------
Use touch command to create file
--------
Creating Virtual Environment:
Chane path to the folder......
python3 -m venv
------------------
to write all the dependencies to a file
pip3 freeze > requirements.txt

-------------
Activiating Environment:
source venv/bin/activate
--------------- 
Inside the virtual Environment
pipenv run 
---------
Flask-Migrate exposes its commands through the flask command. You have already seen flask run, which is a sub-command that is native to Flask. The flask db sub-command is added by Flask-Migrate to manage everything related to database migrations. So let's create the migration repository for microblog by running flask db init:
flask db init
For GENERATING MIGRATION SCIRPT
 flask db migrate -m "users table" 
 flask db upgrade

KILL PROCESS
  sudo pkill -9 firefox

Starting and stoping Remote Desktop:

 sudo /etc/init.d/xrdp start
 sudo /etc/init.d/xrdp stop

Google Cloud Platform:
 
 gcloud config set project flask-web-app-307620


 gcloud app deploy

Curl Commands:

Curl Post Request:
curl --location --request POST 'https://flask-web-app-305810.df.r.appspot.com/webhook' --header 'Content-Type: application/json' --data-raw '{"uri": "https://flask-web-app-305810.df.r.appspot.com/webhook"}'
https://flask-web-app-307620.df.r.appspot.com